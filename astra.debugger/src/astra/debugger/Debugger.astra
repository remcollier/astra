package astra.debugger;

import astra.gui.GuiModule;

agent Debugger {
	module Console C;
	module Prelude P;
	module System S;
	module DebuggerCtrl Ctrl;
	module GuiModule gui;
	
	types test {
		formula debugger_state(string);
	}
	
	initial !init();
	
	rule +!main(list args) {
		wait(debugger_state("initialized"));
		if (P.size(args) == 2) {
			string name = P.valueAsString(args, 0);
			string type = P.valueAsString(args, 1);
			S.createAgent(name, type);
			S.setMainGoal(name, []);
		}
	}
	
	rule +!init() {
		gui.launch("astra.debugger.DebuggerUI");
		+debugger_state("initialized");
	}
	
	rule $gui.event("suspend", [string name]) : name ~= S.name() {
		Ctrl.suspend(name);
	}
	
	rule $gui.event("resume", [string name]) : name ~= S.name() {
		Ctrl.resume(name);
	}
	
	rule $gui.event("step", [string name]) : name ~= S.name() {
		Ctrl.step(name);
	}
}
